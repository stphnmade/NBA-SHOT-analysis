---
title: "When Did NBA Shooting Change?"
subtitle: "A scrollytelling deep dive into threes, midrange, and efficiency"
author: "Stphn"
format:
  html:
    theme: cosmo
    toc: false
    smooth-scroll: true
execute:
  echo: false
  warning: false
  message: false
---

```{r setup-data, include=FALSE}
# Libraries
library(tidyverse)
library(lubridate)
library(janitor)
library(ggplot2)

# Load data
shots <- readRDS("data/NBA_All_Shots.rds") |> clean_names()


# Normalize fields (be tolerant if some cols are missing)
to_char <- function(x) if (x %in% names(shots)) as.character(.data[[x]]) else NA_character_
shots <- shots |>
  mutate(
    shot_type    = toupper(if ("shot_type"    %in% names(shots)) as.character(shot_type) else NA_character_),
    shot_made    = if ("shot_made"   %in% names(shots)) as.logical(shot_made) else NA,
    basic_zone   = if ("basic_zone"  %in% names(shots)) as.character(basic_zone) else NA_character_,
    zone_range   = if ("zone_range"  %in% names(shots)) as.character(zone_range) else NA_character_,
    shot_distance= if ("shot_distance" %in% names(shots)) as.numeric(shot_distance) else NA_real_
  )

#Changing shot zone names to more familiar terms
shots |>
  mutate(
    basic_zone = case_when(
      grepl("^\\s*Restricted Area\\s*$", basic_zone, ignore.case = TRUE) ~ "Restricted Area",
      grepl("^\\s*In the Paint \\(non-RA\\)\\s*$", basic_zone, ignore.case = TRUE) ~ "Paint (non-RA)",
      grepl("^\\s*Mid-range\\s*$", basic_zone, ignore.case = TRUE) ~ "Midrange",
      grepl("^\\s*Left Corner 3\\s*$", basic_zone, ignore.case = TRUE) ~ "Corner 3",
      grepl("^\\s*Right Corner 3\\s*$", basic_zone, ignore.case = TRUE) ~ "Corner 3",
      grepl("^\\s*Above the Break 3\\s*$", basic_zone, ignore.case = TRUE) ~ "Above the Break",
      grepl("^\\s*Backcourt\\s*$", basic_zone, ignore.case = TRUE) ~ "Backcourt",
      TRUE ~ NA_character_
    ))


```

```{r}
#| label: Season_data
# Season aggregates
season_summ <- shots |>
  group_by(season_1) |>
  summarise(
    fga      = n(),
    fgm      = sum(shot_made %in% TRUE, na.rm = TRUE),
    fga_3   = sum(grepl("3PT", shot_type, ignore.case = TRUE), na.rm = TRUE),
    fgm_3   = sum(grepl("3PT", shot_type, ignore.case = TRUE) & shot_made, na.rm = TRUE),
    share_mid   = mean(basic_zone == "Midrange", na.rm = TRUE),
    share_ra    = mean(basic_zone == "Restricted Area", na.rm = TRUE),
    share_paint = mean(basic_zone == "In the Paint (non-RA)", na.rm = TRUE),
    share_c3    = mean(basic_zone %in% c("Left Corner 3","Right Corner 3"), na.rm = TRUE),
    share_atb   = mean(basic_zone == "Above the Break", na.rm = TRUE),
    med_dist = median(shot_distance, na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(
    three_rate = if_else(fga > 0, fga_3 / fga, NA_real_),
    efg = if_else(fga > 0, (fgm + 0.5 * fgm_3) / fga, NA_real_)
  ) |>
  arrange(season_1)

```


```{r}
season_summ <- season_summ|>
  rename(season = season_1)
```



```{r}
# Long format for stacked area (guard against missing cols)
needed <- c("share_ra","share_paint","share_mid","share_c3","share_atb")
missing_needed <- setdiff(needed, names(season_summ))
if (length(missing_needed)) {
  # create missing shares as 0 to avoid errors
  season_summ[missing_needed] <- 0
}
selection_long <- season_summ |>
  select(season, all_of(needed)) |>
  pivot_longer(-season, names_to = "bucket", values_to = "share") |>
  mutate(
    bucket = factor(
      bucket,
      levels = c("share_ra","share_paint","share_mid","share_c3","share_atb"),
      labels = c("Restricted Area","Paint (non-RA)","Midrange","Corner 3","Above the Break")
    )
  )

# X-axis breaks helper
season_order  <- season_summ$season
season_breaks <- unique(season_order[seq(1, length(season_order), length.out = min(10, length(season_order)))])
```

## Three-Point Attempt Rate

::: {.scrolly}
::: {.steps}

### 1) Baseline
Early seasons show a modest share of threes. Teams are feeling out spacing and personnel fits rather than building entire offenses around the arc.

### 2) Acceleration
Watch for the slope to steepen. That’s the moment organizations shift philosophy—lineups, playbooks, and shot diets all re-orient toward the 3.

### 3) Stabilization
If the curve flattens, it hints at an equilibrium: defenses adapt, lineups balance rim pressure with kick-outs, and the league settles near a ceiling.

:::

::: {.graphic}
```{r}
# simple, readable line plot of 3PA share by season
library(ggplot2)
library(scales)

ggplot(season_summ, aes(x = season, y = three_rate, group = 1)) +
  geom_line(linewidth = 1.2) +
  geom_point(size = 1.8) +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  scale_x_discrete() +
  labs(
    x = NULL, y = "3PA share of all FGA",
    title = "Three-Point Attempt Rate Over Time",
    subtitle = "Share of field-goal attempts that are threes, by season"
  ) +
  theme_minimal(base_size = 14) +
  theme(axis.text.x = element_text(hjust = 0.5))
```

:::
:::

### optional: add a subtle inflection callout
If you want to mark a “when the change happened” heuristic on this same chart, drop this **after** the block above (uses your existing `season_summ`):

```{r}
# Heuristic: first season where 3PA share >= 30%
inflect_season <- season_summ$season[which(season_summ$three_rate >= 0.30)[1]]

if (!is.na(inflect_season)) {
  cat(paste0("> **Takeaway:** A clear inflection appears by **", inflect_season, "** when ≥30% of shots are threes.\n"))
}
```

### A league re-written by the three
Narration here…

### Context
Narration here…

:::

::: {.graphic}
```{r}
ggplot(season_summ, aes(season, three_rate, group=1)) +
  geom_line(linewidth=1.2) + geom_point() +
  scale_y_continuous(labels = scales::percent) +
  scale_x_continuous()+
  labs(x=season_summ$season
       ,y="3PA share", title="Three-Point Attempt Rate Over Time")+
  theme_minimal(base_size = 14) +
  theme(axis.text.x = element_text(hjust = 0.5))
  

```

:::
:::


Where Do Shots Come From?

::: {.scrolly}
::: {.steps}

Geometry of modern offense

Narration here…
:::

::: {.graphic}

```{r}
ggplot(selection_long, aes(season, share, fill=bucket)) +
  geom_area(color="white", size=0.1) +
  scale_y_continuous(labels = scales::percent) +
  labs(y="Share of attempts", title="Shot Distribution by Zone")
```




:::
:::

